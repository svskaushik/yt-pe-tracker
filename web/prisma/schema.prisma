// schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("MONGODB_URI")
}

model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  clerkId       String    @unique
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  bio           String?
  isAdmin       Boolean   @default(false)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  posts         Post[]    @relation("UserPosts")
  comments      Comment[] @relation("UserComments")
}

model Post {
  id           String     @id @default(auto()) @map("_id") @db.ObjectId
  title        String
  excerpt      String?
  content      String
  coverImage   String     
  category     String?
  tags         String[]
  readTime     Int?
  viewCount    Int        @default(0)
  commentCount Int        @default(0)
  featured     Boolean    @default(false)
  published    Boolean    @default(false)
  slug         String     @unique
  author       User       @relation("UserPosts", fields: [authorId], references: [id])
  authorId     String     @db.ObjectId
  comments     Comment[]  @relation("PostComments")
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
}

model Comment {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  content   String
  author    User      @relation("UserComments", fields: [authorId], references: [id])
  authorId  String    @db.ObjectId
  post      Post      @relation("PostComments", fields: [postId], references: [id])
  postId    String    @db.ObjectId
  parentId  String?   @db.ObjectId
  parent    Comment?  @relation("CommentReplies", fields: [parentId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  replies   Comment[] @relation("CommentReplies")
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}